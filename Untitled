# Plot the first 20000 samples for KDE and  for preds, already randomly shuffled, to save performance.
plt.title("y1 vs. x1")
sns.kdeplot(X_scaler.inverse_transform(X_val)[:, 0], y_val, cmap="Blues", shade=True, shade_lowest=False)
plt.scatter(X_scaler.inverse_transform(X_val)[:, 0], preds[:, 0], c='r')
plt.show()
plt.title("y1 vs. x2")
sns.kdeplot(X_scaler.inverse_transform(X_val)[:, 1], y_val, cmap="Blues", shade=True, shade_lowest=False)
plt.scatter(X_scaler.inverse_transform(X_val)[:, 1], preds[:, 0], c='r')
plt.show()
plt.title("y1 vs. x3")
sns.kdeplot(X_scaler.inverse_transform(X_val)[:, 3], y_val, cmap="Blues", shade=True, shade_lowest=False)
plt.scatter(X_scaler.inverse_transform(X_val)[:, 2], preds[:, 0], c='r')
plt.show()
plt.title("y1 vs. x4")
sns.kdeplot(X_scaler.inverse_transform(X_val)[:, 4], y_val, cmap="Blues", shade=True, shade_lowest=False)
plt.scatter(X_scaler.inverse_transform(X_val)[:, 2], preds[:, 0], c='r')
plt.show()
plt.title("y1 vs. x5")
sns.kdeplot(X_scaler.inverse_transform(X_val)[:, 5], y_val, cmap="Blues", shade=True, shade_lowest=False)
plt.scatter(X_scaler.inverse_transform(X_val)[:, 2], preds[:, 0], c='r')
plt.show()
